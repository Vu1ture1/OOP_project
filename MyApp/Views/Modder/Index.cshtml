@using Microsoft.AspNetCore.Mvc;
@using MyApp.DataBaseFolder;
@using System.Security.Claims;
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Authentication.Cookies;
@using MyApp.Models;
@using Microsoft.AspNetCore.Razor.Language.Intermediate;
@using Microsoft.EntityFrameworkCore;
@using Humanizer;

@model List<ArticleRequest>

@{
    List<Claim> cl = Context.User.Claims.ToList();

    if (cl[1].Value == "modder")
    {
        Layout = "/Views/Shared/layouts/_Layout_modder.cshtml";
    }
    else if (cl[1].Value == "admin")
    {
        //Layout = "/Views/Shared/layouts/_Layout_test.cshtml"; тут для админа
    }
}

<!DOCTYPE html>
<html>
<head>
    <style>
        body{
            padding-top: 70px;
        }
        
        .grid-container {
            display: grid;
            /* grid-template-columns: repeat(4, 1fr); */ /* 3 статьи в одной строке */
            gap: 20px; /* Отступ между статьями */
            grid-template-columns: repeat(4, 1fr); /* Создает 4 колонки равного размера */
            grid-auto-rows: minmax(100px, auto); /* Устанавливает минимальную высоту ячеек, но позволяет им растягиваться, если содержимое требует больше пространства */
            align-items: stretch; /* Растягивает элементы, чтобы они занимали всю высоту ячейки */
                
        }

        .article-card {
            position: relative;
            
            
            border: 1px solid #ccc;
            border-radius: 20px;
            overflow: hidden;
            height: 100%;
            min-width: 350px;
            min-height: 400px;


            margin-bottom: 20px;
        }

        .article-card:hover .article-image {
            transform: scale(1.02); /* Увеличивает изображение на 0.05% при наведении */
        }

        .article-image {
           width: 100%;
           height: 200px;
            
           border-top-left-radius: 20px; /* Закругление верхнего левого угла */
           border-top-right-radius: 20px; /* Закругление верхнего правого угла */

           transition: transform 0.3s ease-in-out; /* Добавьте это для плавного перехода */
        }

        .article-title {
            
            font-size: 0.95em;
            margin-top: 10px;
            margin-left: 20px;
            margin-right: 20px;
        }

        /* .article-button {
            background-color: #4CAF50;
            color: white;
            text-decoration: none;
            position: absolute;

        }
 */
        .article-button {
            position: absolute; /* Абсолютное позиционирование */
            bottom: 20px; /* Расстояние от нижнего края */
            right: 20px; /* Положение по горизонтали */

            border: 2px solid transparent; /* Прозрачная граница в обычном состоянии */
            background-color: transparent; /* Прозрачный фон в обычном состоянии */
            font-size: 20px; /* Размер шрифта */
            
            color: black;
            text-decoration: none;
            padding: 10px 20px;
            border-radius: 5px;
            transition: all 0.1s ease; /* Плавность перехода */
        }

            /* Дополнительные стили для .article-button при наведении */
            .article-button:hover {
                border-color: black; /* Черная граница при наведении */
                background-color: rgba(0, 0, 0, 0.1); /* Затемнение фона при наведении */
                transform: translate(1px, 1px);
            }



        

        /* .channel-button {
            display: block;
            width: 200px;
            padding: 10px;
            margin: 20px auto;
            background-color: #4CAF50;
            color: white;
            text-align: center;
            text-decoration: none;
            border-radius: 5px;
        } */

        .channel-link {
            color: black;
            text-decoration: none; /* Убирает подчеркивание */
            position: relative; /* Для точного позиционирования */
        }

            .channel-link:hover {
                color: darkgray; /* Цвет при наведении (серый) */
                text-decoration: none; /* Добавляет подчеркивание при наведении */

            }

        .avatar {
            width: 15%;
            height: 15%;
            background-color: #f3f3f3;
            border-radius: 50%;
            margin-right: 10px;
        }

        .channel-info {
            position: relative;
            display: flex;
            align-items: center;
            margin-top: 15px;
            margin-left: 20px;
        }

        .additional-text {
            font-size: 0.8em; /* Размер шрифта */
            color: #888; /* Цвет текста */
            position: absolute;
            bottom: -10px; /* Опускает текст вниз */
            left: 15% + 10px;
        }

        .channel-form {
            display: flex;
            flex-direction: column;
            justify-content: space-between; /* Распределяет контент равномерно */
            height: 50px; /* Высота должна соответствовать высоте иконки */
        }

    </style>
</head>
<body>
    <h2 style="margin-bottom: 20px; font-size: 25px;">Запросы для модерации: </h2>
    
    @{
        if (Model.Count == 0)
        {
            <div>Запросов пока нет</div>
        }
        else
        {
            <div class="grid-container">
                @foreach (var article in Model)
                {
                    <div class="article-card">
                        <img class="article-image" src="@article.article.path_to_corer" alt="Обложка статьи">


                        <div class="channel-info">
                            <img class="avatar" src=@article.article.user.path_to_icon alt="Изображение канала">

                            <form class="channel-form" method="post" action="@Url.Action("", "")" class="channel-form">
                                <input type="hidden" name="user_id" value=@article.article.user.id />
                                <div>

                                    @{
                                        string us = article.article.user.channelname;

                                        if (us.Length > 22)
                                        {
                                            us = us.Substring(0, 22);
                                            us += "...";
                                        }
                                    }
                                    <a href="javascript:;" onclick="this.parentNode.parentNode.submit();" class="channel-link">@us</a>

                                    @{
                                        string date = article.article.date;

                                        DateTime date_conv = Convert.ToDateTime(date);

                                        date = date_conv.Humanize(false);
                                    }
                                    <p class="additional-text">@date</p>
                                </div>
                            </form>
                        </div>

                        @{
                            string title_ch = @article.article.title;

                            if (title_ch.Length > 76)
                            {
                                title_ch = title_ch.Substring(0, 73);
                                title_ch += "...";
                            }
                        }

                        <h2 class="article-title">@title_ch</h2>


                        <form method="get" asp-controller="Modder" asp-action="ModdingArticle">
                            <input type="hidden" name="articleId" value=@article.article.id />
                            <button type="submit" class="article-button">Перейти</button>
                        </form>
                    </div>
                }
            </div>
        }
    }
    

</body>
</html>


@* 
@model List<ArticleRequest>

<div class="grid-container">
    @foreach (var article in Model)
    {
        <div class="article-card">
            <img class="article-image" src="@article.PathToCover" alt="Обложка статьи">
            <h2 class="article-title">@article.Title</h2>
            <form method="post" action="/ControllerName/ActionName">
                <input type="hidden" name="articleId" value="@article.Id" />
                <button type="submit" class="article-button">Перейти</button>
            </form>
        </div>
    }
</div> *@



@* 


<!DOCTYPE html>
<html>
<head>
    <style>
        body{
            padding-top: 70px;
        }
        
        .grid-container {
            display: grid;
            grid-template-columns: repeat(4, 1fr); /* 3 статьи в одной строке */
            gap: 20px; /* Отступ между статьями */
        }

        .article-card {
            border: 1px solid #ccc;
            border-radius: 20px;
            text-align: center;
        }

        .article-image {
           width: 100%;
           height: 50%;
            
           border-top-left-radius: 20px; /* Закругление верхнего левого угла */
           border-top-right-radius: 20px; /* Закругление верхнего правого угла */
        }

        .article-title {
            margin: 10px 0;
        }

        .article-button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            text-decoration: none;
            display: inline-block;
        }
    </style>
</head>
<body>

    <h1>Список статей</h1>

    <div class="grid-container">
    @foreach (var article in Model)
    {
        <div class="article-card">
            <img class="article-image" src="@article.article.path_to_corer" alt="Обложка статьи">
            <h2 class="article-title">@article.article.title</h2>
            <form method="post" asp-controller="Modder" asp-action="ModdingArticle">
                <input type="hidden" name="articleId" value=@article.article.id />
                <button type="submit" class="article-button">Перейти</button>
            </form>
        </div>
    }
</div

</body>
</html>


 *@